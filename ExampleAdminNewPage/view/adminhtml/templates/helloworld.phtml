<!-- Make an HTML page for a custom chatbot for doall saws. include configurations like GPT temperature, upload pdf and connect to database: -->

    <?php
    // With PHP, make an api request to the chatbot on click of the submit button:

    $yourApiKey = getenv('OPENAI_API_KEY');

    $client = OpenAI::factory()
        ->withApiKey($yourApiKey)
        ->withOrganization('your-organization') // default: null
        ->withBaseUri('openai.example.com/v1') // default: api.openai.com/v1
        ->withHttpClient($client = new \GuzzleHttp\Client([])) // default: HTTP client found using PSR-18 HTTP Client Discovery
        ->withHttpHeader('X-My-Header', 'foo')
        ->withQueryParam('my-param', 'bar')
        ->withStreamHandler(fn (RequestInterface $request): ResponseInterface => $client->send($request, [
            'stream' => true // Allows to provide a custom stream handler for the http client.
        ]))
        ->make();

    $response = $client->chat()->create([
        'model' => 'gpt-3.5-turbo',
        'messages' => [
            ['role' => 'user', 'content' => 'Hello!'],
        ],
    ]);
    
    $response->id; // 'chatcmpl-6pMyfj1HF4QXnfvjtfzvufZSQq6Eq'
    $response->object; // 'chat.completion'
    $response->created; // 1677701073
    $response->model; // 'gpt-3.5-turbo-0301'
    
    foreach ($response->choices as $result) {
        $result->index; // 0
        $result->message->role; // 'assistant'
        $result->message->content; // '\n\nHello there! How can I assist you today?'
        $result->finishReason; // 'stop'
    }
    
    $response->usage->promptTokens; // 9,
    $response->usage->completionTokens; // 12,
    $response->usage->totalTokens; // 21
    
    $response->toArray(); // ['id' => 'chatcmpl-6pMyfj1HF4QXnfvjtfzvufZSQq6Eq', ...]
    // print the response
    echo json_encode($response->toArray());    
    echo $response; // 'chatcmpl-6pMyfj1HF4QXnfvjtfzvufZSQq6Eq'
    // foreach ($response->choices as $result) {
    //     echo $result->message->content;
    // }
    ?>
    <script>
    const messages = [
    { role: "system", content: "You are a helpful assistant. You will talk like a pirate." },
    { role: "user", content: "Can you help me?" },
    { role: "assistant", content: "Arrrr! Of course, me hearty! What can I do for ye?" },
    { role: "user", content: "What's the best way to train a parrot?" },
    ];

  console.log(`Messages: ${messages.map((m) => m.content).join("\n")}`);


    require([
        'jquery'
    ], function ($) {
        $(document).ready(function () {
            $('#chatbot-submit').click(function (event) {
                event.preventDefault();

                var message = $('#chatbot-input').val();

                if (message) {
                    $.ajax({
                        url: 'https://api.example.com/chatbot',
                        method: 'POST',
                        data: JSON.stringify({ message: message }),
                        contentType: 'application/json',
                        success: function (response) {
                            // Handle success
                            $('#chatbot-response').text(response.reply);
                        },
                        error: function (error) {
                            // Handle error
                            console.error(error);
                        }
                    });
                }
            });
        });
    });
    </script>

    <link rel="stylesheet" href="https://cdn.tailwindcss.com">
    <h1 class="text-xl">DoAll Saws Chatbot</h1>
    
    <h2 class="text-lg">Configurations</h2>
    <p class="text-md">Here is the HTML of the above query:</p>
    <p>Here is the HTML of the above query:</p>
    <p>Here is the HTML of the above query:</p>
    <!-- add an upload link -->
    <input type="file" id="myFile" name="filename">
    <!-- With tailwinds, add a temperature slider -->
    <div class="w-full">
        <label for="temperature" class="block text-lg font-medium text-gray-700">Temperature</label>
        <div class="mt-1">
            <input type="range" name="temperature" id="temperature" class="focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
        </div>
        <!-- send an api request -->
        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">Send</button>
    </div>
    <!-- add a chatbot -->
    <div class="w-full">
        <label for="chatbot" class="block text-sm font-medium text-gray-700">Chatbot</label>
        <div class="mt-1">
            <input type="text" name="chatbot" id="chatbot" class="focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
        </div>
    </div>
    <!-- add a database connection -->
    <div class="w-full">
        <label for="database" class="block text-sm font-medium text-gray-700">Database</label>
        <div class="mt-1">
            <input type="text" name="database" id="database" class="focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
        </div>
    </div>
    <!-- add a pdf upload -->
    <div class="w-full">
        <label for="pdf" class="block text-sm font-medium text-gray-700">PDF</label>
        <div class="mt-1">
            <input type="file" name="pdf" id="pdf" class="focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
        </div>
    </div>
    <!-- add a submit button -->
    <button type="submit" id="chatbot-submit" class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">Submit</button>
    <!-- add a reset button -->
    <button type="reset" class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">Reset</button>
    <!-- add a cancel button -->
    <button type="cancel" class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">Cancel</button>
    <!-- add a save button -->